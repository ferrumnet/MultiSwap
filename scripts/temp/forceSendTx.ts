import { ethers } from "ethers";

// RPC endpoint URL
// const rpcUrl = "https://base-mainnet.core.chainstack.com/e7aa01c976c532ebf8e2480a27f18278"
const rpcUrl = "https://nd-829-997-700.p2pify.com/790712c620e64556719c7c9f19ef56e3" // Arbitrum

// Create a provider
const provider = new ethers.JsonRpcProvider(rpcUrl);
const privateKey = process.env.PRIVATE_KEY0!;
const wallet = new ethers.Wallet(privateKey, provider);

// The raw transaction data
const rawTx = {
    to: "0x90b4C9Cc6AAf15be692d20D409A86bd32897D9b1", // Address of the receiver or contract
    value: 5, // Amount to send (for ETH transfers)
    data: "0xb43d2a4d0000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000000000000000000000000000000000000000c2de0000000000000000000000009f6abbf0ba6b5bfa27f4deb6597cc6ec20573fda000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e5831000000000000000000000000111111125421ca6dc452d289314280a0f8842a6500000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000002105000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000cebb7265ed625f8df2336c00d0ec6656bea9e6bb83a7b1c6fece88243e14b135f99d399fac9212f1fc078dccbf9759e3e50002de0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000046000000000000000000000000000000000000000000000000000000000000002a807ed2379000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd090000000000000000000000009f6abbf0ba6b5bfa27f4deb6597cc6ec20573fda000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e58310000000000000000000000003fec70f319a4145eba17765ae0c64b2232fe5bae000000000000000000000000c7b23d5da44f3d421ad27863788bedcce4b34b0d0000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000000000000000000000000000000000000000c2de00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000015800000000000000000000000000000000000000000000013a00010c00001a0020d6bdbf789f6abbf0ba6b5bfa27f4deb6597cc6ec20573fda00a007e5c0d20000000000000000000000000000000000000000000000000000ce00006700206ae4071138002dc6c03fec70f319a4145eba17765ae0c64b2232fe5baedb86e7fe4074e3c29d2fd0ed1d104c00e11a196b00000000000000000000000000000000000000000000000000000000000000019f6abbf0ba6b5bfa27f4deb6597cc6ec20573fda00206ae40711b8002625a0db86e7fe4074e3c29d2fd0ed1d104c00e11a196b111111125421ca6dc452d289314280a0f8842a65000000000000000000000000000000000000000000000000000000000000000182af49447d8a07e3bd95bd0d56f35241523fbab10020d6bdbf78af88d065e77c8cc2239327c5edb3a432268e5831111111125421ca6dc452d289314280a0f8842a6500000000000000007c2ad3dd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080dc8ae2341b63cab74b2c1dc1c7c8ed1db3e0cc57fcf71bb4ae3b0313b930a43d0000000000000000000000000000000000000000000000000000000066437fff00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041d7bca98c877638e9b7f566ad30f96d2a0af921005bea0a3e929a03db7b57a1224f2786d0a7319b2201bd5170a0387836abfb4c003dff981c7694d2de93a479821c00000000000000000000000000000000000000000000000000000000000000", // Encoded contract call or empty for plain ETH transfer
    gasLimit: 1000000, // Maximum gas to spend
    gasPrice: 200000000, // Gas price in wei
};

console.log("Using wallet address: " + wallet.address);

async function sendTransaction() {
    try {
        console.log("Sending transaction...");
        const txResponse = await wallet.sendTransaction(rawTx);
        console.log("Transaction sent! Hash:", txResponse.hash);

        // Wait for the transaction to be mined
        const receipt = await txResponse.wait();
        console.log("Transaction confirmed in block:", receipt!.blockNumber);
    } catch (error) {
        console.error("Error sending transaction:", error);
    }
}

sendTransaction();
